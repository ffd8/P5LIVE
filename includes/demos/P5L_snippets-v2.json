{
	"new" : {
	"gt": "",
	"s": "",
	"dt": "",
	"db": "",
	"gb": "",
	"demo": "true"
	},
	"audio": {
		"gt": "",
		"s": "setupAudio(true) // global vars\n// a5.ease = .075 // set easing",
		"dt": "/* audio vars: amp, ampEase, fft, fftEase, waveform, waveformEase */\nupdateAudio()",
		"db": "",
		"gb": "",
		"demo": "true"
	},
	"font": {
		"gt": "let font\n\nfunction preload() {\n\tfont = loadFont(\"includes/demos-data/fonts/RobotoMono-Regular.otf\")\n}",
		"s": "textFont(font)",
		"dt": "",
		"db": "",
		"gb": "",
		"demo": "true"
	},
	"osc": {
		"gt": "let libs = [\"includes/js/socket.io.js\"];\nlet socket;",
		"s": "setupOsc('127.0.0.1', 12000, 12001); // oscHost, oscPortIn, oscPortOut",
		"dt": "",
		"db": "",
		"gb": "\n// OSC LOGIC \nfunction receiveOsc(address, value) {\n\t// print('in: ' + address + ', ' +value)\n}\n\nfunction sendOsc(address, value) {\n\tif(socket != undefined) {\n\t\tsocket.emit('message', [address].concat(value));\n\t}\n}\n\nfunction setupOsc(oscHost, oscPortIn, oscPortOut) {\n\tsocket = io.connect('http://127.0.0.1:8082');\n\tsocket.on('connect', function() {\n\t\tsocket.emit('config', {\n\t\t\tserver: {\n\t\t\t\thost: oscHost,\n\t\t\t\tport: oscPortIn\n\t\t\t},\n\t\t\tclient: {\n\t\t\t\thost: oscHost,\n\t\t\t\tport: oscPortOut\n\t\t\t}\n\t\t});\n\t\tprint('OSC Ready!\\n' + oscHost + ', listen: ' + oscPortIn + ', send: ' + oscPortOut);\n\t});\n\tsocket.on('message', function(msg) {\n\t\treceiveOsc(msg[0], msg.splice(1));\n\t});\n}",
		"demo": "true"
	},
	"midi":{
		"gt": "",
		"s": "// setup MIDI in/out by ID # or \"name\" (see console.log)\nsetupMidi(0, 0, true) // in, out, globalvars (if false use: midi5. )\n// midi5.debug = ['note', 'controlchange'] // send to console",
		"dt": "/* vars: note, cc, notes[], ccs[], channels[], */\nupdateMidi()\n",
		"db": "",
		"gb": ""
	}
}
				
