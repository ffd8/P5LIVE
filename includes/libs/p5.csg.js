/**
 * Skipped minification because the original files appears to be already minified.
 * Original file: /npm/@davepagurek/p5.csg@0.0.3/build/p5.csg.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
!function(t,n){"object"==typeof exports&&"object"==typeof module?module.exports=n():"function"==typeof define&&define.amd?define([],n):"object"==typeof exports?exports.P5CSG=n():t.P5CSG=n()}(self,(()=>{return t={77:t=>{CSG=function(){this.polygons=[]},CSG.fromPolygons=function(t){var n=new CSG;return n.polygons=t,n},CSG.prototype={clone:function(){var t=new CSG;return t.polygons=this.polygons.map((function(t){return t.clone()})),t},toPolygons:function(){return this.polygons},union:function(t){var n=new CSG.Node(this.clone().polygons),o=new CSG.Node(t.clone().polygons);return n.clipTo(o),o.clipTo(n),o.invert(),o.clipTo(n),o.invert(),n.build(o.allPolygons()),CSG.fromPolygons(n.allPolygons())},subtract:function(t){var n=new CSG.Node(this.clone().polygons),o=new CSG.Node(t.clone().polygons);return n.invert(),n.clipTo(o),o.clipTo(n),o.invert(),o.clipTo(n),o.invert(),n.build(o.allPolygons()),n.invert(),CSG.fromPolygons(n.allPolygons())},intersect:function(t){var n=new CSG.Node(this.clone().polygons),o=new CSG.Node(t.clone().polygons);return n.invert(),o.clipTo(n),o.invert(),n.clipTo(o),o.clipTo(n),n.build(o.allPolygons()),n.invert(),CSG.fromPolygons(n.allPolygons())},inverse:function(){var t=this.clone();return t.polygons.map((function(t){t.flip()})),t}},CSG.cube=function(t){t=t||{};var n=new CSG.Vector(t.center||[0,0,0]),o=t.radius?t.radius.length?t.radius:[t.radius,t.radius,t.radius]:[1,1,1];return CSG.fromPolygons([[[0,4,6,2],[-1,0,0]],[[1,3,7,5],[1,0,0]],[[0,1,5,4],[0,-1,0]],[[2,6,7,3],[0,1,0]],[[0,2,3,1],[0,0,-1]],[[4,5,7,6],[0,0,1]]].map((function(t){return new CSG.Polygon(t[0].map((function(e){var s=new CSG.Vector(n.x+o[0]*(2*!!(1&e)-1),n.y+o[1]*(2*!!(2&e)-1),n.z+o[2]*(2*!!(4&e)-1));return new CSG.Vertex(s,new CSG.Vector(t[1]))})))})))},CSG.sphere=function(t){t=t||{};var n,o=new CSG.Vector(t.center||[0,0,0]),e=t.radius||1,s=t.slices||16,i=t.stacks||8,r=[];function l(t,s){t*=2*Math.PI,s*=Math.PI;var i=new CSG.Vector(Math.cos(t)*Math.sin(s),Math.cos(s),Math.sin(t)*Math.sin(s));n.push(new CSG.Vertex(o.plus(i.times(e)),i))}for(var c=0;c<s;c++)for(var h=0;h<i;h++)n=[],l(c/s,h/i),h>0&&l((c+1)/s,h/i),h<i-1&&l((c+1)/s,(h+1)/i),l(c/s,(h+1)/i),r.push(new CSG.Polygon(n));return CSG.fromPolygons(r)},CSG.cylinder=function(t){t=t||{};var n=new CSG.Vector(t.start||[0,-1,0]),o=new CSG.Vector(t.end||[0,1,0]),e=o.minus(n),s=t.radius||1,i=t.slices||16,r=e.unit(),l=Math.abs(r.y)>.5,c=new CSG.Vector(l,!l,0).cross(r).unit(),h=c.cross(r).unit(),a=new CSG.Vertex(n,r.negated()),u=new CSG.Vertex(o,r.unit()),p=[];function f(t,o,i){var l=o*Math.PI*2,a=c.times(Math.cos(l)).plus(h.times(Math.sin(l))),u=n.plus(e.times(t)).plus(a.times(s)),p=a.times(1-Math.abs(i)).plus(r.times(i));return new CSG.Vertex(u,p)}for(var y=0;y<i;y++){var d=y/i,g=(y+1)/i;p.push(new CSG.Polygon([a,f(0,d,-1),f(0,g,-1)])),p.push(new CSG.Polygon([f(0,g,0),f(0,d,0),f(1,d,0),f(1,g,0)])),p.push(new CSG.Polygon([u,f(1,g,1),f(1,d,1)]))}return CSG.fromPolygons(p)},CSG.Vector=function(t,n,o){3==arguments.length?(this.x=t,this.y=n,this.z=o):"x"in t?(this.x=t.x,this.y=t.y,this.z=t.z):(this.x=t[0],this.y=t[1],this.z=t[2])},CSG.Vector.prototype={clone:function(){return new CSG.Vector(this.x,this.y,this.z)},negated:function(){return new CSG.Vector(-this.x,-this.y,-this.z)},plus:function(t){return new CSG.Vector(this.x+t.x,this.y+t.y,this.z+t.z)},minus:function(t){return new CSG.Vector(this.x-t.x,this.y-t.y,this.z-t.z)},times:function(t){return new CSG.Vector(this.x*t,this.y*t,this.z*t)},dividedBy:function(t){return new CSG.Vector(this.x/t,this.y/t,this.z/t)},dot:function(t){return this.x*t.x+this.y*t.y+this.z*t.z},lerp:function(t,n){return this.plus(t.minus(this).times(n))},length:function(){return Math.sqrt(this.dot(this))},unit:function(){return this.dividedBy(this.length())},cross:function(t){return new CSG.Vector(this.y*t.z-this.z*t.y,this.z*t.x-this.x*t.z,this.x*t.y-this.y*t.x)}},CSG.Vertex=function(t,n){this.pos=new CSG.Vector(t),this.normal=new CSG.Vector(n)},CSG.Vertex.prototype={clone:function(){return new CSG.Vertex(this.pos.clone(),this.normal.clone())},flip:function(){this.normal=this.normal.negated()},interpolate:function(t,n){return new CSG.Vertex(this.pos.lerp(t.pos,n),this.normal.lerp(t.normal,n))}},CSG.Plane=function(t,n){this.normal=t,this.w=n},CSG.Plane.EPSILON=1e-5,CSG.Plane.fromPoints=function(t,n,o){var e=n.minus(t).cross(o.minus(t)).unit();return new CSG.Plane(e,e.dot(t))},CSG.Plane.prototype={clone:function(){return new CSG.Plane(this.normal.clone(),this.w)},flip:function(){this.normal=this.normal.negated(),this.w=-this.w},splitPolygon:function(t,n,o,e,s){for(var i=0,r=[],l=0;l<t.vertices.length;l++){var c=(g=this.normal.dot(t.vertices[l].pos)-this.w)<-CSG.Plane.EPSILON?2:g>CSG.Plane.EPSILON?1:0;i|=c,r.push(c)}switch(i){case 0:(this.normal.dot(t.plane.normal)>0?n:o).push(t);break;case 1:e.push(t);break;case 2:s.push(t);break;case 3:var h=[],a=[];for(l=0;l<t.vertices.length;l++){var u=(l+1)%t.vertices.length,p=r[l],f=r[u],y=t.vertices[l],d=t.vertices[u];if(2!=p&&h.push(y),1!=p&&a.push(2!=p?y.clone():y),3==(p|f)){var g=(this.w-this.normal.dot(y.pos))/this.normal.dot(d.pos.minus(y.pos)),S=y.interpolate(d,g);h.push(S),a.push(S.clone())}}h.length>=3&&e.push(new CSG.Polygon(h,t.shared)),a.length>=3&&s.push(new CSG.Polygon(a,t.shared))}}},CSG.Polygon=function(t,n){this.vertices=t,this.shared=n,this.plane=CSG.Plane.fromPoints(t[0].pos,t[1].pos,t[2].pos)},CSG.Polygon.prototype={clone:function(){var t=this.vertices.map((function(t){return t.clone()}));return new CSG.Polygon(t,this.shared)},flip:function(){this.vertices.reverse().map((function(t){t.flip()})),this.plane.flip()}},CSG.Node=function(t){this.plane=null,this.front=null,this.back=null,this.polygons=[],t&&this.build(t)},CSG.Node.prototype={clone:function(){var t=new CSG.Node;return t.plane=this.plane&&this.plane.clone(),t.front=this.front&&this.front.clone(),t.back=this.back&&this.back.clone(),t.polygons=this.polygons.map((function(t){return t.clone()})),t},invert:function(){for(var t=0;t<this.polygons.length;t++)this.polygons[t].flip();this.plane.flip(),this.front&&this.front.invert(),this.back&&this.back.invert();var n=this.front;this.front=this.back,this.back=n},clipPolygons:function(t){if(!this.plane)return t.slice();for(var n=[],o=[],e=0;e<t.length;e++)this.plane.splitPolygon(t[e],n,o,n,o);return this.front&&(n=this.front.clipPolygons(n)),o=this.back?this.back.clipPolygons(o):[],n.concat(o)},clipTo:function(t){this.polygons=t.clipPolygons(this.polygons),this.front&&this.front.clipTo(t),this.back&&this.back.clipTo(t)},allPolygons:function(){var t=this.polygons.slice();return this.front&&(t=t.concat(this.front.allPolygons())),this.back&&(t=t.concat(this.back.allPolygons())),t},build:function(t){if(t.length){this.plane||(this.plane=t[0].plane.clone());for(var n=[],o=[],e=0;e<t.length;e++)this.plane.splitPolygon(t[e],this.polygons,this.polygons,n,o);n.length&&(this.front||(this.front=new CSG.Node),this.front.build(n)),o.length&&(this.back||(this.back=new CSG.Node),this.back.build(o))}}},t.exports=CSG},413:function(t,n,o){"use strict";var e=this&&this.__importDefault||function(t){return t&&t.__esModule?t:{default:t}};Object.defineProperty(n,"__esModule",{value:!0}),n.setupCSG=void 0;const s=e(o(77));class i{constructor(t,n){this.p5=t,this.csg=this.inputToCSG(n)}ids(){var t;const n=new Set,o=this.csg.toPolygons();for(const e of o)void 0!==(null===(t=e.shared)||void 0===t?void 0:t.id)&&n.add(e.shared.id);return n}inputToGeom(t){return t instanceof this.p5.constructor.Geometry?t:this.p5.buildGeometry(t)}inputToCSG(t){return t instanceof s.default?t:(n=this.inputToGeom(t),s.default.fromPolygons(n.faces.map((t=>new s.default.Polygon(t.map((t=>new s.default.Vertex(new s.default.Vector(n.vertices[t].array()),n.vertexNormals[t]?new s.default.Vector(n.vertexNormals[t].array()):void 0))),{id:n.gid})))));var n}inputToCSGWrapper(t){return t instanceof i?t:new i(this.p5,this.inputToGeom(t))}applyBooleanOptions(t,n,{includeSelfFaces:o=!0,includeOtherFaces:e=!0}){if(o&&e)return t;const i=o?new Set:this.ids(),r=e?new Set:n.ids();return s.default.fromPolygons(t.toPolygons().filter((t=>{var n,s;return!(!o&&i.has(null===(n=t.shared)||void 0===n?void 0:n.id)||!e&&r.has(null===(s=t.shared)||void 0===s?void 0:s.id))})))}union(t,n={}){const o=this.inputToCSGWrapper(t);return new i(this.p5,this.applyBooleanOptions(this.csg.union(o.csg),o,n))}subtract(t,n={}){const o=this.inputToCSGWrapper(t);return new i(this.p5,this.applyBooleanOptions(this.csg.subtract(o.csg),o,n))}intersect(t,n={}){const o=this.inputToCSGWrapper(t);return new i(this.p5,this.applyBooleanOptions(this.csg.intersect(o.csg),o,n))}invert(){return new i(this.p5,this.csg.inverse())}done(){return t=this.p5,n=this.csg,t.buildGeometry((()=>{const o=n.toPolygons();for(const n of o){t.beginShape();for(const o of n.vertices)t.normal(o.normal.x,o.normal.y,o.normal.z),t.vertex(o.pos.x,o.pos.y,o.pos.z);t.endShape()}}));var t,n}}n.setupCSG=t=>{t.prototype.csg=function(t){return function(t,n){return new i(t,n)}(this,t)}},window.p5&&(0,n.setupCSG)(window.p5)}},n={},function o(e){var s=n[e];if(void 0!==s)return s.exports;var i=n[e]={exports:{}};return t[e].call(i.exports,i,i.exports,o),i.exports}(413);var t,n}));